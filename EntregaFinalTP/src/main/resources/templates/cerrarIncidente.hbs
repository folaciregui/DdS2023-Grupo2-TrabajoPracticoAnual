<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <link rel="icon" type="image/x-icon" href="/img/logoUTN.png">
    <link rel="stylesheet" href="/css/cargarDatosEntidades.css">
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@500&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@300&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <title>Cerrar Incidente</title>
</head>
<body style="margin: 0 ; padding: 0 ; text-align: center ; background-image: url('/img/subte2.jpg') ; background-size: cover">
<header style="background-color: rgba(255,255,255,0.5) ; text-align: left ; display: flex; flex-direction: row">
    <img src="/img/logoUTN.png" alt="Imagen en color" style="height: 90px; text-align: left"></img>
    <div style="display: flex; align-items: center; justify-content: right; flex: 1;">
        <div class="config" style="align-items: center; align-content: center; justify-content: center">
            <div style="flex: 1; width: 30%; padding: 10px;">
                <i id="icono-usuario" class="fa fa-user" aria-hidden="true" style="color: #4300d2"></i>
            </div>
            <div style="flex: 1; width: 70%; padding: 10px;">
                <select class="seleccion" id="opciones" name="opciones" style="color: #4300d2">
                    <option class="opcion" value=""></option>
                    <option class="opcion" value="mi-cuenta-CL" onclick="redireccionar(value)">Mi cuenta CL</option>
                    <option class="opcion" value="mi-cuenta-CP" onclick="redireccionar(value)">Mi cuenta CP</option>
                    <option class="opcion" value="cerrar-sesion">Cerrar sesión</option>
                </select>
            </div>
        </div>
    </div>
</header>

<div id="app" class="contenedorColumna" style="background: rgba(255,255,255,0.5)">
    <div class="columna1" style="background: none; margin-right: 0; margin-left: 0; height: 100px; margin-top: 20px">
        <div class="contenedorColumna1" style="margin-right: 0; margin-left: 0">
            <a class="referencia" href="/cargarDatosEntidades">Cargar entidades</a>
            <a class="referencia" href="/abrirIncidente">Abrir Incidente</a>
            <a class="referencia" href="/cerrarIncidente">Cerrar Incidente</a>
            <a class="referencia" href="/consultaIncidentesPorEstado">Consultar Incidente</a>
            <a class="referencia" href="/sugerenciaIncidente">Sugerencia Incidente</a>
            <a class="referencia" href="/rankingsCL">Rankings CL</a>
            <a class="referencia" href="/rankingsCP">Rankings CP</a>
        </div>
    </div>
    <div class="columna2" style="margin-left: 0; margin-right: 0; background: none; height: 485px; justify-content: center; align-items: center;text-align: center;">
        <div id= "filtrosIncidentes" style="display: flex; flex-direction: row">
            <div class="opciones" style="flex: 1; width: 45%">
                <div style="text-align: start">
                    <label class="label" for="selectEntidad">Selecciona Entidad:</label>
                </div>
                <table style="width: 100%; margin-top: 10px">
                    <tbody>
                    <tr v-for="entidad in entidades" :key="entidad.id" @click="seleccionarEntidad(entidad)">
                        <td class="list">
                            <li style="text-align: start; justify-content: left">
                                <span v-text="entidad.nombre" class="span"></span>
                            </li>
                        </td>
                    </tr>
                    </tbody>
                </table>
            </div>
            <div class="opciones" style="flex: 1; width: 45%">
                <div style="text-align: start">
                    <label class="label" for="selectEstablecimiento">Selecciona establecimiento:</label>
                </div>
                <ul style="width: 100%; margin-top: 10px">
                    <li style="text-align: start; justify-content: left" v-for="establecimiento in establecimientos" :key="establecimiento.id" @click="seleccionarEstablecimiento(establecimiento)">
                        <span v-text="establecimiento.nombre" class="span"></span>
                    </li>
                </ul>
            </div>
            <button class="botonAbrir" @click="filtrarIncidentes()">Filtrar incidentes</button>
        </div>
        <div id="areaIncidentes" style="display: none">
            <div style="display: flex; flex-direction: row">
            <div class="opciones">
                <div style="text-align: start">
                    <label class="label" for="selectEstablecimiento">Incidentes:</label>
                </div>

                  <ul style="width: 100%; margin-top: 10px">
                    <li style="text-align: start; justify-content: left" v-for="incidente in incidentes" :key="incidente.id"  @click="seleccionarIncidente(incidente)">
                        <span v-text="incidente.id" class="span"></span>
                    </li>
                </ul>
            </div>
            <button class="botonAbrir" style="height: 420px" @click="cerrarIncidente()">Cerrar Incidente</button>
            <!--<button class="boton" @click="volverAFiltrar()">Atras</button>-->
            </div>
        </div>


        <!--<button class="boton" @click="cerrarIncidente">Cerrar incidente</button>-->
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/vue@2"></script>


<script src="https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js"></script>
<script>

    document.getElementById('opciones').addEventListener('change', function() {
        var selectedValue = this.value;

        // Redirigir según la opción seleccionada
        switch (selectedValue) {
            case 'mi-cuenta-CL':
                window.location.href = '/miCuentaCL';
                break;
            case 'mi-cuenta-CP':
                window.location.href = '/miCuentaCP';
                break;
            case 'cerrar-sesion':
                window.location.href = '/paginaInicio';
                break;
                // Puedes agregar más casos según sea necesario
            default:
                break;
        }
    });



    new Vue({
        el: '#app',
        data: {
            entidadSeleccionada: '',
            establecimientoSeleccionado: '',
            servicioSeleccionado: '',

            establecimientos: [],
            servicios: [],
            incidentes: [],
            incidenteSeleccionado: '',
            entidades: [], //   cargar las
            establecimientosFiltrados:[] ,
            serviciosFiltrados:[],
        },
        methods: {
            seleccionarIncidente(incidenteId){
                this.incidenteSeleccionado = incidenteId;
            },
            seleccionarServicio(servicioId){
                this.servicioSeleccionado = servicioId;
            },
            seleccionarEntidad(entidadId) {
                this.entidadSeleccionada = entidadId; // Actualiza la entidad seleccionada
                this.actualizarEstablecimientos(); // Carga los establecimientos relacionados con la entidad seleccionada
                establecimientosFiltrados = this.establecimientosFiltrados();
            },
            seleccionarEstablecimiento(establecimientoId) {
                this.establecimientoSeleccionado = establecimientoId;
                this.actualizarServicios();
                this.serviciosFiltrados=this.serviciosFiltrados();//agregado
            },
            establecimientosFiltrados() {
                return this.establecimientos.filter(establecimiento => establecimiento.entidad.nombre === this.entidadSeleccionada.nombre);

            },

            serviciosFiltrados() {
                console.log("entre a filtrar");
                return this.servicios.filter(servicio => servicio.establecimiento === this.establecimientoSeleccionado);
            },

            actualizarEstablecimientos() {
                // Hacer un fetch para obtener los establecimientos de la entidad seleccionada
                fetch(`http://localhost:8080/api/entidades/${this.entidadSeleccionada.id}/establecimientos`)
                        .then(response => response.json())
                        .then(establecimientos => {
                            console.log(establecimientos);
                            this.establecimientos = establecimientos;
                            this.establecimientoSeleccionado = ''; // Resetear la selección
                            this.servicios = []; // Resetear la lista de servicios
                        })
                        .catch(error => {
                            console.error('Error en la solicitud de los establecimientos:', error);
                            alert(`Hubo un error en la solicitud al buscar los establecimientos:\n\n${error.message}`);
                        });


            },

            actualizarServicios() {//trae todo los servicios luego los filtro
                // Hacer un fetch para obtener los servicios del establecimiento seleccionado
                fetch(`http://localhost:8080/api/establecimientos/${this.establecimientoSeleccionado.id}/servicios`)
                        .then(response => response.json())
                        .then(servicios => {
                            console.log(servicios);
                            this.servicios = servicios;
                        })
                        .catch(error => {
                            console.error('Error en la solicitud de los servicios:', error);
                            alert(`Hubo un error en la solicitud al buscar los servicios:\n\n${error.message}`);
                        });
            },
            actualizarIncidenteEnBD(incidenteId) {

                    fetch(`/api/incidentes/${incidenteId}`, {//capaz cambiar esto
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(this.incidenteSeleccionado)
                    })
                    .then(response => {
                        if (response.ok) {
                            console.log('Incidente actualizado en la base de datos');
                        } else {
                            console.error('Error al actualizar el incidente en la base de datos (else):', response.status);
                        }
                    })
                 .catch(error => {
                    console.error('Error al actualizar el incidente en la base de datos:', error);
                });
            },
            filtrarIncidentes(){
                document.getElementById("filtrosIncidentes").style.display="none";
                document.getElementById("areaIncidentes").style.display="block";
                fetch(`http://localhost:8080/api/incidentesFiltrados/${this.entidadSeleccionada.id}/${this.establecimientoSeleccionado.id}`)
                        .then(response => response.json())
                        .then(incidentes => {
                            console.log(incidentes);
                            this.incidentes = incidentes;
                        })
                        .catch(error => {
                            console.error('Error en la solicitud de los servicios:', error);
                            alert(`Hubo un error en la solicitud al buscar los servicios:\n\n${error.message}`);
                        });

            },
            cerrarIncidente() {
                this.actualizarIncidenteEnBD(this.incidenteSeleccionado.id)
                console.log("cerrando incidente");
            },
            volverAFiltrar(){
                document.getElementById("filtrosIncidentes").style.display="block";
                document.getElementById("areaIncidentes").style.display="none";
            }
        },
        mounted() {
            fetch(`http://localhost:8080/api/entidades`)
                    .then(response => {
                        if (response.status >= 400) {
                            alert("Hubo un error en el API")
                        } else {
                            return response.json()
                        }
                    })
                    .then(entidades => {
                        console.log(entidades);
                        console.log(entidades[0].nombre);
                        // entidades.forEach(entidad);
                        // const nombresEntidades = entidades.map(entidad => entidad.nombre);
                        this.entidades = entidades;
                    })
                    .catch(error => {
                        console.error('Error en la solicitud:', error);
                        alert(`Hubo un error en la solicitud con fetch entidades:\n\n${error.message}`);
                    });

        }
    });
</script>
</body>
</html>