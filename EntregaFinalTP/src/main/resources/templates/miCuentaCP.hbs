<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <link rel="icon" type="image/x-icon" href="/img/logoUTN.png">
    <link rel="stylesheet" href="/css/miCuentaCP.css">
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@500&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@300&display=swap" rel="stylesheet">
    <title>Mi cuenta</title>
</head>
<body style="margin: 0 ; padding: 0 ; text-align: center ; background-image: url('/img/subte2.jpg') ; background-size: cover">
<header style="background-color: rgba(255,255,255,0.5) ; text-align: left ; display: flex; flex-direction: row">
    <img class="logoUTN" src="/img/logoUTN.png" alt="Imagen en color" style=" text-align: left"></img>
    <div style="align-items: center; flex: 1; text-align: right; margin-top: 20px;">
        <button class="boton" onclick="logout()" style="background-color: #4300d2; color: #ffffff;" onmouseover="this.style.backgroundColor='rgba(255,255,255,0.5)'; this.style.color='#4300d2'" onmouseout="this.style.backgroundColor='#4300d2'; this.style.color='#fff'">Cerrar Sesión</button>
        <a class="botonMenu" href="pagina-principal.html" style="text-decoration: none; background-color: #4300d2; color: #ffffff;" onmouseover="this.style.backgroundColor='rgba(255,255,255,0.5)'; this.style.color='#4300d2'" onmouseout="this.style.backgroundColor='#4300d2'; this.style.color='#fff'">Volver al menu</a>
        <h1 class="titulo">Mi cuenta</h1>
    </div>
</header>

<div class="contenedorColumna" style="background: rgba(255,255,255,0.5)">
    <div class="columna1" style="background: none">
        <div class="contenedorColumna1">
            <a class="referencia" href="cargar-datos-entidades.html">Cargar datos Entidades y Organismos</a>
            <a class="referencia" href="abrir-incidente.html">Abrir Incidente</a>
            <a class="referencia" href="cerrar-incidente.html">Cerrar Incidente</a>
            <a class="referencia" href="consultar-incidente.html">Consultar Incidente</a>
            <a class="referencia" href="sugerencia-incidente.html">Sugerencia Incidente</a>
            <a class="referencia" href="visualizacion-rankings.html">Rankings</a>
            <a class="referenciaElegida" href="mi-cuenta.html">Mi cuenta</a>
        </div>
    </div>
    <div class="columna2" style="background: none; " >
        <div class="miCuenta" style="background: none; margin: 0">
            <img src="/img/usuarioSinFoto.png" alt="Imagen no disponible" width=80px height=80px>
        </div>
        <div id="perfilArea" class="miCuentaContenedor" style="background-color: rgba(255,255,255,0.5);">
            <p class="label2" style="margin-bottom: 0">NOMBRE</p>
            <p id="label-nombre" class="label3" style="margin-top: 0">Nombre</p>
            <input type="text" id="edit-name" style="display: none">

            <p class="label2" style="margin-bottom: 0">APELLIDO</p>
            <p id="label-apellido" class="label3" style="margin-top: 0">Apellido</p>
            <input type="text" id="edit-lastname" style="display: none">

            <p class="label2" style="margin-bottom: 0">CORREO ELECTRÓNICO</p>
            <p id="label-correo" class="label3" style="margin-top: 0">Correo electrónico</p>

            <p class="label2" style="margin-bottom: 0">TELÉFONO</p>
            <p id="label-telefono" class="label3" style="margin-top: 0">Teléfono</p>
        </div>
        <div class= "areaComunidad" id="comunidadesArea" style="display: none;">
            <!-- Contenido de las comunidades -->
            <select id="comunidadesDropdown" v-model="comunidadSeleccionada" @change="actualizarRol">
                <!-- Opciones del desplegable -->
                <option value="comunidad1">Comunidad 1</option>
                <option value="comunidad2">Comunidad 2</option>
            </select>
            <!-- Actualización dinámica del rol -->


            <button id="boton-modificarRol" @click="modificarRol">Modificar Rol</button>

            <select id="selectRoles" style="display: none;"></select>
            <button id="boton-guardarRol" class="boton" @click="guardarRol" style="display: none; font-size: 14px;"> Guardar Cambios</button>
        </div>
        <button id="boton-editar" class="boton" onclick="editarPerfil()">Editar perfil</button>
        <button id="boton-comunidades" class="boton" onclick="verComunidades()">Mis comunidades</button>
        <button id="boton-guardar" class="boton" onclick="actualizarPerfil()" style="display: none">Guardar</button>
        <button id="boton-atras" class="boton" onclick="ocultarComunidades()" style="display: none">Atras</button>
    </div>
</div>

<script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-app.js"></script><!-- para firebase    -->
<script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-auth.js"></script>
<script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-firestore.js"></script>
<script src="https://cdn.jsdelivr.net/npm/vue@2"></script><!-- para vue    -->
<script src="https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js"></script>
<script>
    // URL de tu API que devuelve los roles de las comunidades
    //devuelve las membresias {idComunidad, rolImpacto}

    // Realizar la solicitud HTTP usando fetch

       new Vue({
            el: '#comunidadesArea',
            data: {
                comunidadSeleccionada: 'comunidad1', // Establecer una comunidad predeterminada la primera de la lista seria
                // rolesPorComunidad: {
                //     comunidad1: 'observador', // Define los roles por comunidad
                //     comunidad2: 'observador'
                // }
                rolesPorComunidad: {}
            },
            methods: {
                actualizarRol() {
                    const rolActualElement = document.getElementById('rolActual');
                    const rolComunidad = this.rolesPorComunidad[this.comunidadSeleccionada];
                    rolActualElement.textContent = `Rol actual: ${rolComunidad}`;
                },
                guardarRol() {
                    const nuevoRol = document.getElementById('selectRoles').value;
                    const rolActualElement = document.getElementById('rolActual');
                    //const comunidadSeleccionada = document.getElementById('comunidadesDropdown').value;
                    const comunidadSeleccionada = this.comunidadSeleccionada;
                    this.$set(this.rolesPorComunidad, comunidadSeleccionada, nuevoRol);
                    // aca persistir el rol y la comunidad
                    // rolesPorComunidad[comunidadSeleccionada] = nuevoRol;
                    rolActualElement.textContent = `Rol actual: ${this.rolesPorComunidad[comunidadSeleccionada]}`;
                    // Aquí puedes enviar el nuevo rol a tu backend para actualizarlo en la base de datos
                    console.log(`Nuevo rol seleccionado: ${nuevoRol} para la comunidad ${comunidadSeleccionada}`);
                    document.getElementById('selectRoles').style.display = 'none';
                    document.getElementById("boton-modificarRol").style.display = "block";
                    document.getElementById('boton-guardarRol').style.display = 'none';
                    // Enviar datos actualizados al backend
                    fetch('URL_DEL_BACKEND', {
                        method: 'PUT', // Método HTTP para actualizar los datos
                        headers: {
                            'Content-Type': 'application/json' // Tipo de contenido que estás enviando
                        },
                        body: JSON.stringify({
                            comunidad: comunidadSeleccionada,
                            nuevoRol: nuevoRol
                        })
                    })
                            .then(response => {
                                if (!response.ok) {
                                    throw new Error('Error al actualizar el rol en la base de datos');
                                }
                                return response.json();
                            })
                            .then(data => {
                                // Manejar la respuesta del backend si es necesario
                                console.log('Rol actualizado en la base de datos:', data);
                            })
                            .catch(error => {
                                console.error('Error al enviar los datos al backend:', error);
                            });
                },
                modificarRol() {
                    // Mostrar el rol actual
                    const rolActualElement = document.getElementById('rolActual');
                    const comunidadSeleccionada = this.comunidadSeleccionada;
                    const rolComunidad = this.rolesPorComunidad[comunidadSeleccionada]; //no se modifica este

                    rolActualElement.textContent = `Rol actual: ${rolComunidad}`;
                    document.getElementById("boton-modificarRol").style.display = "none";
                    document.getElementById("boton-guardarRol").style.display = "block";
                    // Obtener el select de roles
                    const selectRoles = document.getElementById('selectRoles');

                    // Limpiar el select antes de agregar nuevas opciones
                    selectRoles.innerHTML = '';


                    const roles = ['observador', 'afectado']; // si se modificaran los roles habria que leer desde la BD los roles

                    // Agregar las opciones al select
                    roles.forEach((rol) => {
                        const option = document.createElement('option');
                        option.value = rol;
                        option.textContent = rol.charAt(0).toUpperCase() + rol.slice(1); // Formatear la primera letra en mayúscula
                        selectRoles.appendChild(option);
                    });

                    // Mostrar el select
                    selectRoles.value = rolComunidad;
                    selectRoles.style.display = 'block';
                }
            },
            mounted() {
                // Mostrar el rol actual al cargar la página
                fetch(`https://localhost:8080/api/obtenerRoles`)
                        .then(response => {
                            if (response.status >= 400) {
                                alert("Hubo un error en el API")
                            } else {
                                return response.json()
                            }
                        })
                        .then(data => {
                            // Los datos obtenidos de la API (suponiendo que es un objeto con roles)
                            // Ahora rolesPorComunidad tiene los roles de la API
                            console.log(data); // Verificar en la consola
                            console.log(`entra al segundo then`);
                            let rolesPorComunidadBD = {};

                            // Suponiendo que 'data' es la respuesta de la API con los roles de las comunidades
                            data.forEach(membresia => {
                                rolesPorComunidadBD[membresia.id] = membresia.rolImpacto; // Asignar el ID como clave y el rol como valor
                            });
                            rolesPorComunidad=rolesPorComunidadBD;
                        })
                        .catch(error => {
                            console.error('Error al obtener los roles:', error);
                            console.error('Tipo de error:', error.constructor.name);
                            console.error('Mensaje de error:', error.message);
                        });

                // const rolActualElement = document.getElementById('rolActual');
              //  rolActualElement.textContent = `Rol actual: ${this.rolesPorComunidad[this.comunidadSeleccionada]}`;
            }
        });



    const firebaseConfig = {
        apiKey: "AIzaSyCqXg0sZXtSOxHPEjkKKS0S4jdHER1z-VU",
        authDomain: "dds-sistema-monitoreables.firebaseapp.com",
        projectId: "dds-sistema-monitoreables",
        storageBucket: "dds-sistema-monitoreables.appspot.com",
        messagingSenderId: "625925036616",
        appId: "1:625925036616:web:8a61a46d81a4c752b9167d"
    };
    firebase.initializeApp(firebaseConfig);
    const user = JSON.parse(localStorage.getItem('user'));
    if(user){
        //console.log("el usuario tiene: "+user);
        // console.log("El usuario tiene: ", JSON.stringify(user, null, 2)); //permite ver toda la info guardada en un despliegue lo eliminariamos
        console.log("nombre usuario: "+user.displayName);
        console.log("correo usuario: "+user.email);
        document.getElementById("label-nombre").textContent = user.displayName || "Nombre no disponible";
        document.getElementById("label-apellido").textContent = user.apellido || "Apellido no disponible";
        document.getElementById("label-correo").textContent = user.email || "Correo no disponible";
        document.getElementById("label-telefono").textContent = user.telefono || "Teléfono no disponible";
        // a partir de aca trabajo el resto de cosas

    }else{
        alert("Sucedio un error por favor vuelva a iniciar sesion");//ver si lo mandamos a index o que hacemos
        console.log("el usuario no existe");
        window.location.href = "pagina-inicio.html";
    }
    function logout() {
        console.log("cerrando");
        firebase.auth().signOut().then(() => {
            localStorage.removeItem('user');
            console.log("El usuario tiene: ", JSON.stringify(user, null, 2)); //permite ver toda la info guardada en un despliegue lo eliminariamos
            console.log(localStorage.getItem('user'));
            window.location.href = "pagina-inicio.html"
        }).catch((error) => {
            alert("Error al cerrar sesión: " + error.message);
        });
    }

    function editarPerfil() {
        // Obtener referencias a los elementos HTML
        const userNameLabel = document.getElementById("label-nombre");
        const userLastnameLabel = document.getElementById("label-apellido");
        const editNameInput = document.getElementById("edit-name");
        const editLastnameInput = document.getElementById("edit-lastname");
        const botonEditar = document.getElementById("boton-editar");
        const botonComunidades = document.getElementById("boton-comunidades");
        const botonGuardar = document.getElementById("boton-guardar");
        // Obtener datos actuales del usuario
        const userName = userNameLabel.textContent;
        const userLastname = userLastnameLabel.textContent;

        // Mostrar campos editables y ocultar labels
        editNameInput.style.display = "block";
        editLastnameInput.style.display = "block";
        botonGuardar.style.display = "block";
        botonEditar.style.display = "none";
        botonComunidades.style.display = "none";
        userNameLabel.style.display = "none";
        userLastnameLabel.style.display = "none";

        // Mostrar los datos actuales en los campos editables
        editNameInput.value = userName;
        editLastnameInput.value = userLastname;
    }
    function actualizarPerfil() {
        const userNameLabel = document.getElementById("label-nombre");
        const userLastnameLabel = document.getElementById("label-apellido");
        const editNameInput = document.getElementById("edit-name");
        const editLastnameInput = document.getElementById("edit-lastname");
        const botonEditar = document.getElementById("boton-editar");
        const botonComunidades = document.getElementById("boton-comunidades");
        const botonGuardar = document.getElementById("boton-guardar");

        const userName = editNameInput.value;
        const userLastname = editLastnameInput.value;

        console.log(userName);
        console.log(userLastname);

        // Actualizar labels con los nuevos valores
        userNameLabel.textContent = userName || "Nombre no disponible";
        userLastnameLabel.textContent = userLastname || "Apellido no disponible";

        // Ocultar inputs y mostrar labels
        editNameInput.style.display = "none";
        editLastnameInput.style.display = "none";
        botonGuardar.style.display = "none";
        botonComunidades.style.display = "block";
        botonEditar.style.display = "block";
        userNameLabel.style.display = "block";
        userLastnameLabel.style.display = "block";

        userNameLabel.style.textAlign = "left";
        userLastnameLabel.style.textAlign = "left";

    }
    // Función para mostrar las comunidades
    // Objeto para almacenar los roles por comunidad



    function verComunidades() {
        // Ocultar otros elementos y mostrar comunidades
        document.getElementById("boton-editar").style.display = "none";
        document.getElementById("boton-comunidades").style.display = "none";
        document.getElementById("boton-guardar").style.display = "none";

        // Mostrar el área de las comunidades
        document.getElementById("comunidadesArea").style.display = "flex";
        document.getElementById("perfilArea").style.display="none";
        document.getElementById("boton-atras").style.display = "block";
    }
    function ocultarComunidades(){
        document.getElementById("boton-editar").style.display = "block";
        document.getElementById("boton-comunidades").style.display = "block";
        document.getElementById("boton-guardar").style.display = "none";

        // Mostrar el área de las comunidades
        document.getElementById("comunidadesArea").style.display = "none";
        document.getElementById("perfilArea").style.display="block";
        document.getElementById("boton-atras").style.display = "none";
    }

    // Función para modificar el rol
    // Suponiendo que tienes una variable que almacena el rol actual del usuario en esa comunidad
    // let rolActual = 'observador'; // Puedes obtener esta información de tu lógica de backend o base de datos
    // document.addEventListener('DOMContentLoaded', function() {
    //     const rolActualElement = document.getElementById('rolActual');
    //     rolActualElement.textContent = `Rol actual: ${rolActual}`;
    // });
    // let rolesPorComunidad = {
    //     comunidad1: 'observador',
    //     comunidad2: 'observador'
    // };

</script>
</body>
</html>