<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <link rel="icon" type="image/x-icon" href="/img/logoUTN.png">
    <link rel="stylesheet" href="/css/cargarDatosEntidades.css">
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@500&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@300&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <title>Sugerencia Incidente</title>
</head>
<body style="margin: 0 ; padding: 0 ; text-align: center ; background-image: url('/img/subte2.jpg') ; background-size: cover">
<header style="background-color: rgba(255,255,255,0.5) ; text-align: left ; display: flex; flex-direction: row">
    <img src="/img/logoUTN.png" alt="Imagen en color" style="height: 90px; text-align: left"></img>

    <div style="display: flex; align-items: center; justify-content: right; flex: 1;">
        <div class="config" style="align-items: center; align-content: center; justify-content: center">
            <div style="flex: 1; width: 30%; padding: 10px;">
                <i id="icono-usuario" class="fa fa-user" aria-hidden="true" style="color: #4300d2"></i>
            </div>
            <div style="flex: 1; width: 70%; padding: 10px;">
                <select class="seleccion" id="opciones" name="opciones" style="color: #4300d2">
                    <option class="opcion" value=""></option>
                    <option class="opcion" value="mi-cuenta-CL" onclick="redireccionar(value)">Mi cuenta CL</option>
                    <option class="opcion" value="mi-cuenta-CP" onclick="redireccionar(value)">Mi cuenta CP</option>
                    <option class="opcion" value="cerrar-sesion" onclick="logout()">Cerrar sesión</option>
                </select>
            </div>
        </div>
    </div>

    <!--
    <div style="align-items: center; flex: 1; text-align: right;">
        <button class="boton" onclick="logout()" style="background-color: #4300d2; color: #ffffff;" onmouseover="this.style.backgroundColor='rgba(255,255,255,0.75)'; this.style.color='#4300d2'" onmouseout="this.style.backgroundColor='#4300d2'; this.style.color='#fff'">Cerrar Sesión</button>
    </div>
    -->
</header>

<div  class="contenedorColumna" style="background: rgba(255,255,255,0.5)">
    <div class="columna1" style="background: none; margin-right: 0; margin-left: 0; height: 100px; margin-top: 20px">
        <div class="contenedorColumna1" style="margin-right: 0; margin-left: 0">
            <a class="referencia" href="/cargarDatosEntidades">Cargar entidades</a>
            <a class="referencia" href="/abrirIncidente">Abrir Incidente</a>
            <a class="referencia" href="/cerrarIncidente">Cerrar Incidente</a>
            <a class="referencia" href="/consultaIncidentesPorEstado">Consultar Incidente</a>
            <a class="referencia" href="/sugerenciaIncidente">Sugerencia Incidente</a>
            <a class="referencia" href="/rankingsCL">Rankings CL</a>
            <a class="referencia" href="/rankingsCP">Rankings CP</a>
        </div>
    </div>
    <div id= "app" class="columna2" style="background: none; height: 100%">
        <div class="opciones" style="height: 100%">
            <label class="label">Incidentes por comunidades notificables</label>
            <!--<ul>
                <li v-for="incidente in incidentes" :key="incidente.id" @click="seleccionarIncidente(incidente)">
                    <span v-text="incidente.id"></span>
                    <span v-text="incidente.servicio.tipoDeServicio"></span>
                    <span v-text="incidente.descripcion"></span>
                    <span v-text="incidente.estado"></span>
                    <span v-text="incidente.servicio.establecimiento.nombre"></span>
                </li>
            </ul>-->
            <table>
                <thead>
                <tr>
                    <th style="width: 300px">ID</th>
                    <th style="width: 300px">Tipo de Servicio</th>
                    <th style="width: 300px">Descripción</th>
                    <th style="width: 300px">Estado</th>
                    <th style="width: 300px">Nombre del Establecimiento</th>
                </tr>
                </thead>
                <tbody>
                <tr v-for="incidente in incidentes" :key="incidente.id" @click="seleccionarIncidente(incidente)">
                    <td><span v-text="incidente.id"></span></td>
                    <td><span v-text="incidente.servicio.tipoDeServicio"></span></td>
                    <td><span v-text="incidente.descripcion"></span></td>
                    <td><span v-text="incidente.estado"></span></td>
                    <td><span v-text="incidente.servicio.establecimiento.nombre"></span></td>
                </tr>
                </tbody>
            </table>

        </div>
        <div class="opciones">
            <label class="label">El incidente ya terminó?</label>
            <!-- en vez de redireccion copiar las cosas de cerrar incidente-->
            <button class="boton" type="submit" @click="cerrarIncidente">Cerrar incidente</button>
        </div>


    </div>


</div>

<script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-app.js"></script>
<script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-auth.js"></script>
<script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-firestore.js"></script>
<script src="https://cdn.jsdelivr.net/npm/vue@2"></script>
<script src="https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js"></script>
<script>
    document.getElementById('opciones').addEventListener('change', function() {
        var selectedValue = this.value;

        // Redirigir según la opción seleccionada
        switch (selectedValue) {
            case 'mi-cuenta-CL':
                window.location.href = '/miCuentaCL';
                break;
            case 'mi-cuenta-CP':
                window.location.href = '/miCuentaCP';
                break;
            case 'cerrar-sesion':
                window.location.href = '/paginaInicio';
                break;
                // Puedes agregar más casos según sea necesario
            default:
                break;
        }
    });

    const firebaseConfig = {
        apiKey: "AIzaSyCqXg0sZXtSOxHPEjkKKS0S4jdHER1z-VU",
        authDomain: "dds-sistema-monitoreables.firebaseapp.com",
        projectId: "dds-sistema-monitoreables",
        storageBucket: "dds-sistema-monitoreables.appspot.com",
        messagingSenderId: "625925036616",
        appId: "1:625925036616:web:8a61a46d81a4c752b9167d"
    };
    firebase.initializeApp(firebaseConfig);
    const user = JSON.parse(localStorage.getItem('user'));
    if(user){

        // a partir de aca trabajo el resto de cosas

    }else{
        alert("Sucedio un error por favor vuelva a iniciar sesion");//ver si lo mandamos a index o que hacemos
        console.log("el usuario no existe");
        window.location.href = "pagina-inicio.html";
    }
    function logout() {
        console.log("cerrando");
        firebase.auth().signOut().then(() => {
            localStorage.removeItem('user');
            console.log("El usuario tiene: ", JSON.stringify(user, null, 2)); //permite ver toda la info guardada en un despliegue lo eliminariamos
            console.log(localStorage.getItem('user'));
            window.location.href = "pagina-inicio.html"
        }).catch((error) => {
            alert("Error al cerrar sesión: " + error.message);
        });
    }
</script>
<script>
    const app = new Vue({
        el: '#app',
        data: {
            incidentes: [],
            incidenteSeleccionado: '',
            usuario:'',
        },
        methods: {
            seleccionarIncidente(incidenteId){
                this.incidenteSeleccionado = incidenteId;
            },
            editarIncidente(){
                document.getElementById("areaInformacion").style.display = 'none';
                document.getElementById("areaEdicion").style.display = 'flex';
                document.getElementById("areaEdicion").style.flexDirection = 'column';
            },
            volverASugerencia(){
                document.getElementById("areaInformacion").style.display = 'block';
                document.getElementById("areaEdicion").style.display = 'none';
            },
            cerrarIncidente() {
                this.actualizarIncidenteEnBD(this.incidenteSeleccionado.id)
                console.log("cerrando incidente");
            },
            actualizarIncidenteEnBD(incidenteId) {

                fetch(`/api/incidentes/${incidenteId}`, {//capaz cambiar esto
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(this.incidenteSeleccionado)
                })
                        .then(response => {
                            if (response.ok) {
                                console.log('Incidente actualizado en la base de datos');
                            } else {
                                console.error('Error al actualizar el incidente en la base de datos (else):', response.status);
                            }
                        })
                        .catch(error => {
                            console.error('Error al actualizar el incidente en la base de datos:', error);
                        });
            },
            traerIncidentesPorComunidad(){
                fetch(`http://localhost:8080/api/incidentesPorComunidadAsociada/${this.usuario.id}`)//traer  los incidentes notificables
                        .then(response => {
                            if (response.status >= 400) {
                                alert("Hubo un error en el API")
                            } else {
                                return response.json()
                            }
                        })
                        .then(incidentes => {
                            this.incidentes = incidentes;
                        })
                        .catch(error => {
                            console.error('Error en la solicitud de los incidentes por comunidad:', error);
                            alert(`Hubo un error en la solicitud de los incidentes por comunidad:\n\n${error.message}`);
                        });
            }

        },
        mounted() {

            fetch(`/api/obtenerUsuario`)//ya hay un get parecido en CL
                    .then(response => {
                        if (response.status >= 400) {
                            alert("Hubo un error en el API")
                        } else {
                            return response.json()
                        }
                    })
                    .then(usuario => {
                        console.log("el usuario que devuelve es: ", usuario); // Verificar en la consola
                        this.usuario = usuario;

                        //OBTENER EL ID REAL
                        this.traerIncidentesPorComunidad();
                    })
                    .catch(error => {
                        console.error('Error en la solicitud al traer el usuario:', error);
                        alert(`Hubo un error en la solicitud al buscar el usuario:\n\n${error.message}`);
                    });


        }
    });
</script>
</body>
</html>