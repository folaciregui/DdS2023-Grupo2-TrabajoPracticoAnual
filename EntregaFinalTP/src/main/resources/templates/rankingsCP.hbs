<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <link rel="icon" type="image/x-icon" href="/img/logoUTN.png">
    <link rel="stylesheet" href="/css/rankings.css">
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@500&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@300&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <title>Rankings</title>
</head>
<body style="margin: 0 ; padding: 0 ; text-align: center ; background-image: url('/img/subte2.jpg') ; background-size: cover">
<header style="background-color: rgba(255,255,255,0.5) ; text-align: left ; display: flex; flex-direction: row">
    <img src="/img/logoUTN.png" alt="Imagen en color" style="height: 90px; text-align: left"></img>
    <div style="display: flex; align-items: center; justify-content: right; flex: 1;">
        <div class="config" style="align-items: center; align-content: center; justify-content: center">
            <div style="flex: 1; width: 30%; padding: 10px;">
                <i id="icono-usuario" class="fa fa-user" aria-hidden="true" style="color: #4300d2"></i>
            </div>
            <div style="flex: 1; width: 70%; padding: 10px;">
                <select class="seleccion" id="opciones" name="opciones" style="color: #4300d2">
                    <option class="opcion" value=""></option>
                    <option class="opcion" value="mi-cuenta-CL" onclick="redireccionar(value)">Mi cuenta CL</option>
                    <option class="opcion" value="mi-cuenta-CP" onclick="redireccionar(value)">Mi cuenta CP</option>
                    <option class="opcion" value="cerrar-sesion">Cerrar sesión</option>
                </select>
            </div>
        </div>
    </div>
</header>

<div id="app" class="contenedorColumna" style="background: rgba(255,255,255,0.5)">
    <div class="columna1" style="background: none; margin-right: 0; margin-left: 0; height: 100px; margin-top: 20px">
        <div class="contenedorColumna1" style="margin-right: 0; margin-left: 0">
            <a class="referencia" href="/cargarDatosEntidades">Cargar entidades</a>
            <a class="referencia" href="/abrirIncidente">Abrir Incidente</a>
            <a class="referencia" href="/cerrarIncidente">Cerrar Incidente</a>
            <a class="referencia" href="/consultaIncidentesPorEstado">Consultar Incidente</a>
            <a class="referencia" href="/sugerenciaIncidente">Sugerencia Incidente</a>
            <a class="referencia" href="/rankingsCL">Rankings CL</a>
            <a class="referencia" href="/rankingsCP">Rankings CP</a>
        </div>
    </div>
    <div class="columna1" style="background: none">
        <div class="contenedorColumna1" style="background: none">
            <button class="botonAbrir" style="margin-right: 10px" @click="tipoProm()">PROMEDIO_DE_CIERRE</button>
            <button class="botonAbrir" style="margin-right: 10px" @click="tipoMayorImpacto()">MAYOR_IMPACTO</button>
            <button class="botonAbrir" style="margin-right: 10px" @click="tipoMayorCant()">MAYOR_CANT_INCIDENTES</button>
        </div>
    </div>
    <div  class="columna2" style="background: none">
        <div class="opciones">
            <ul>
                <li v-for="ranking in rankingsFiltrados" :key="ranking"  :value="ranking" @click="seleccionarRanking(ranking)">
                    <span v-text="ranking.id"></span>
                    <span v-text="ranking.posicion"></span>
                    <span v-text="ranking.tipoDeRanking"></span>
                    <span v-text="ranking.entidad.nombre"></span>
                </li>
            </ul>

        </div>
        <!--
        <div style="height: 20px"></div>
        <button class="boton" @click="filtrarRankings">Buscar Ranking</button>
        -->
        <h1>FALTA TERMINAR</h1>
    </div>
</div>


<script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-app.js"></script>
<script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-auth.js"></script>
<script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-firestore.js"></script>
<script src="https://cdn.jsdelivr.net/npm/vue@2"></script>
<script src="https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js"></script>
<!--<script>-->
<!--    const selectRanking = document.getElementById('selectRanking');-->
<!--    const rankings = ["", "PROMEDIO_DE_CIERRE", "MAYOR_IMPACTO", "MAYOR_CANT_INCIDENTES"];-->
<!--    rankings.forEach(ranking => {-->
<!--        const option = document.createElement('option');-->
<!--        option.value = ranking;-->
<!--        option.textContent = ranking;-->
<!--        selectRanking.appendChild(option);-->
<!--    });-->
<!--</script>-->
<script>
    const firebaseConfig = {
        apiKey: "AIzaSyCqXg0sZXtSOxHPEjkKKS0S4jdHER1z-VU",
        authDomain: "dds-sistema-monitoreables.firebaseapp.com",
        projectId: "dds-sistema-monitoreables",
        storageBucket: "dds-sistema-monitoreables.appspot.com",
        messagingSenderId: "625925036616",
        appId: "1:625925036616:web:8a61a46d81a4c752b9167d"
    };
    firebase.initializeApp(firebaseConfig);
    const user = JSON.parse(localStorage.getItem('user'));
    if(user){
        console.log("el usuario tiene: "+user);
        console.log("El usuario tiene: ", JSON.stringify(user, null, 2)); //permite ver toda la info guardada en un despliegue lo eliminariamos
        console.log("nombre usuario: "+user.displayName);
        console.log("correo usuario: "+user.email);
        // a partir de aca trabajo el resto de cosas

    }else{
        alert("Sucedio un error por favor vuelva a iniciar sesion");//ver si lo mandamos a index o que hacemos
        console.log("el usuario no existe");
        window.location.href = "pagina-inicio.html";
    }
    function logout() {
        console.log("cerrando");
        firebase.auth().signOut().then(() => {
            localStorage.removeItem('user');
            console.log("El usuario tiene: ", JSON.stringify(user, null, 2)); //permite ver toda la info guardada en un despliegue lo eliminariamos
            console.log(localStorage.getItem('user'));
            window.location.href = "pagina-inicio.html"
        }).catch((error) => {
            alert("Error al cerrar sesión: " + error.message);
        });
    }
</script>
<script>

    document.getElementById('opciones').addEventListener('change', function() {
        var selectedValue = this.value;

        // Redirigir según la opción seleccionada
        switch (selectedValue) {
            case 'mi-cuenta-CL':
                window.location.href = '/miCuentaCL';
                break;
            case 'mi-cuenta-CP':
                window.location.href = '/miCuentaCP';
                break;
            case 'cerrar-sesion':
                window.location.href = '/paginaInicio';
                break;
                // Puedes agregar más casos según sea necesario
            default:
                break;
        }
    });


    new Vue({
        el: '#app',
        data: {
            rankingSeleccionado: '',
            rankings: ["", "PROMEDIO_DE_CIERRE", "MAYOR_IMPACTO", "MAYOR_CANT_INCIDENTES"],
            rankingFiltrados: [],
        },
        methods: {
            tipoProm(){
                this.seleccionarRanking("PROMEDIO_DE_CIERRE")
            },
            tipoMayorImpacto(){
                this.seleccionarRanking("MAYOR_IMPACTO")
            },
            tipoMayorCant(){
                this.seleccionarRanking("MAYOR_CANT_INCIDENTES")
            },
            seleccionarRanking(rankingId){
                this.rankingSeleccionado = rankingId;
                this.filtrarRankings()
            },

            filtrarRankings(){
                console.log(this.rankingSeleccionado);
                fetch(`http://localhost:8080/rankingFiltradosCP/${this.rankingSeleccionado}`)
                        .then(response => {
                            if (response.status >= 400) {
                                alert("Hubo un error en el API filtrando")
                            } else {
                                return response.json()
                            }
                        })
                        .then(rankingFiltrados => {
                            console.log(rankingFiltrados);
                            this.rankingFiltrados = rankingFiltrados;
                            console.log('ya filtre');
                        })
                        .catch(error => {
                            console.error('Error en la solicitud:', error);
                            alert(`Hubo un error en la solicitud con fetch rankings:\n\n${error.message}`);
                        });
            }

        },
        mounted() {



        }
    });
</script>



</body>
</html>